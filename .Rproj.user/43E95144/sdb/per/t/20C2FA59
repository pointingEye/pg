{
    "contents" : "twoRerunnable <- function (){\n  \n#write to columns beatsOther the value of the other rater that is closest to the value of this rater of each row \npg$beatsOther <- pg$beats[\n  JHn + sapply (\n    1:(JHn+NSn), function(x) \n      which (pg$nearBeat[(JHn+1):(JHn+NSn)]==pg$nearBeat[x])\n  )\n]\n\n#compute difference between beats and beatsOhter\npg$dist <- pg$beats - pg$beatsOther\n\n#compute absolute difference between beats and beatsOhter\npg$distAbs <- abs(pg$beats - pg$beatsOther)\n\n#show whether it is perfect (0), within one to four frames tolerance (0/1/2/3/4/5/6/7/8/9/10/more)\npg$distCat <- sapply (1:(JHn+NSn), function(x) if(pg$distAbs[x]<0.003) \"0\" else if(pg$distAbs[x]<0.045) \"1\" else if(pg$distAbs[x]<0.087) \"2\" else if(pg$distAbs[x]<0.129) \"3\" else if(pg$distAbs[x]<0.171) \"4\" else if(pg$distAbs[x]<0.213) \"5\" else if(pg$distAbs[x]<0.255) \"6\" else if(pg$distAbs[x]<0.297) \"7\" else if(pg$distAbs[x]<0.339) \"8\" else if(pg$distAbs[x]<0.381) \"9\" else if(pg$distAbs[x]<0.423) \"10\" else \"more\")\n\n#write a column that only shows the tolerated deviations\npg$dist0f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\") pg$dist[x] else NA)\n\npg$dist1f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\") pg$dist[x] else NA)\n\npg$dist2f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\") pg$dist[x] else NA)\n\npg$dist3f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\") pg$dist[x] else NA)\n\npg$dist4f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\"|pg$distCat[x]==\"4\") pg$dist[x] else NA)\n\npg$dist5f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\"|pg$distCat[x]==\"4\"|pg$distCat[x]==\"5\") pg$dist[x] else NA)\n\npg$dist6f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\"|pg$distCat[x]==\"4\"|pg$distCat[x]==\"5\"|pg$distCat[x]==\"6\") pg$dist[x] else NA)\n\npg$dist7f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\"|pg$distCat[x]==\"4\"|pg$distCat[x]==\"5\"|pg$distCat[x]==\"6\"|pg$distCat[x]==\"7\") pg$dist[x] else NA)\n\npg$dist8f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\"|pg$distCat[x]==\"4\"|pg$distCat[x]==\"5\"|pg$distCat[x]==\"6\"|pg$distCat[x]==\"7\"|pg$distCat[x]==\"8\") pg$dist[x] else NA)\n\npg$dist9f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\"|pg$distCat[x]==\"4\"|pg$distCat[x]==\"5\"|pg$distCat[x]==\"6\"|pg$distCat[x]==\"7\"|pg$distCat[x]==\"8\"|pg$distCat[x]==\"9\") pg$dist[x] else NA)\n\npg$dist10f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]==\"0\"|pg$distCat[x]==\"1\"|pg$distCat[x]==\"2\"|pg$distCat[x]==\"3\"|pg$distCat[x]==\"4\"|pg$distCat[x]==\"5\"|pg$distCat[x]==\"6\"|pg$distCat[x]==\"7\"|pg$distCat[x]==\"8\"|pg$distCat[x]==\"9\"|pg$distCat[x]==\"10\") pg$dist[x] else NA)\n\n\npg <<- pg\n\n\n#calculate the standard deviation, ignore NAs\nsd(pg$dist0f[1:JHn], na.rm=TRUE)\nsd(pg$dist1f[1:JHn], na.rm=TRUE)\nsd(pg$dist2f[1:JHn], na.rm=TRUE)\nsd(pg$dist3f[1:JHn], na.rm=TRUE)\nsd(pg$dist4f[1:JHn], na.rm=TRUE)\nsd(pg$dist5f[1:JHn], na.rm=TRUE)\nsd(pg$dist6f[1:JHn], na.rm=TRUE)\nsd(pg$dist7f[1:JHn], na.rm=TRUE)\nsd(pg$dist8f[1:JHn], na.rm=TRUE)\nsd(pg$dist9f[1:JHn], na.rm=TRUE)\nsd(pg$dist10f[1:JHn], na.rm=TRUE)\n\n#show how many beats are in which confInt\ntable (pg$distCat[1:JHn])\n\n\n# Now, resolve conflicts:\n\n#  1.  \n#a.  When nearBeat contains two values (“[2:3]”) AND\n#b.\t(looking into Elan) they are both either occupied or unoccupied by another neighbour (ELSE write the number of the unoccupied candidate into the nearBeat cell )\n#replace the nearBeat value with a distant number (e.g. if it is 1, put 11; if it is 33, put 1). \n\n#  2.\t\n#a.\tWhen nearBeat is equal for more than one row AND \n#b.\tmore than one of these rows are tolerated AND\n#c.\ttwo are equally the closest (else replace the farther) AND\n#d.\tthey are both either occupied or unoccupied by another neighbour (ELSE replace only occupied), \n#replace the nearBeat value of all except the closest neighbour by a distant number (e.g. if it is 1, put 11; if it is 33, put 1). \n\n#Then rerun the commands beginning exactly with “#write to columns beatsOther …”\n}",
    "created" : 1413275947817.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1903713138",
    "id" : "20C2FA59",
    "lastKnownWriteTime" : 1413364309,
    "path" : "D:/Dokumente/stats/R/pg/2renunnable.R",
    "project_path" : "2renunnable.R",
    "properties" : {
    },
    "source_on_save" : true,
    "type" : "r_source"
}