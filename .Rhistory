1
function(1)
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Eng_rh-s.txt", header=FALSE)
View(pg)
sd(pg$dist5f[1:JHn], na.rm=TRUE)
source.with.encoding('D:/Dokumente/stats/R/pg/1.R', encoding='UTF-8')
source.with.encoding('D:/Dokumente/stats/R/pg/1.R', encoding='UTF-8')
#create new columns for JH and NS
pg$V5 <- NA; pg$V6 <- NA; pg$V7 <- NA; pg$V8 <- NA; pg$V9 <- NA; pg$V10 <- NA; pg$V11 <- NA; pg$V12 <- NA; pg$V13 <- NA; pg$V14 <- NA; pg$V15 <- NA; pg$V16 <- NA; pg$V17 <- NA; pg$V18 <- NA; pg$V19 <- NA; pg$V20 <- NA
#write column names for JH and NS
colnames(pg) <- c("coder","NA","beats","hand","nearBeat","beatsOther", "dist", "distAbs", "distCat", "dist0f", "dist1f", "dist2f", "dist3f", "dist4f", "dist5f", "dist6f", "dist7f", "dist8f", "dist9f", "dist10f")
#set one vector to of each raters’ number observations
JHn <- length (grep('JH', pg$coder))
NSn <- length (grep('NS', pg$coder))
#write to columns “nearBeat” the value of the row number of the other rater value (“beat”) that is closest to the value of the jh rater of each row
pg$nearBeat <- sapply (1:(NSn+JHn), function(x) which(abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x])==min(abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x]))))
#write to columns beatsOther the value of the other rater that is closest to the value of this rater of each row
pg$beatsOther <- pg$beats[JHn + sapply (1:(JHn+NSn), function(x) which (pg$nearBeat[(JHn+1):(JHn+NSn)]==pg$nearBeat[x]))]
#compute difference between beats and beatsOhter
pg$dist <- pg$beats - pg$beatsOther
#compute absolute difference between beats and beatsOhter
pg$distAbs <- abs(pg$beats - pg$beatsOther)
#show whether it is perfect (0), within one to four frames tolerance (0/1/2/3/4/5/6/7/8/9/10/more)
pg$distCat <- sapply (1:(JHn+NSn), function(x) if(pg$distAbs[x]<0.003) "0" else if(pg$distAbs[x]<0.045) "1" else if(pg$distAbs[x]<0.087) "2" else if(pg$distAbs[x]<0.129) "3" else if(pg$distAbs[x]<0.171) "4" else if(pg$distAbs[x]<0.213) "5" else if(pg$distAbs[x]<0.255) "6" else if(pg$distAbs[x]<0.297) "7" else if(pg$distAbs[x]<0.339) "8" else if(pg$distAbs[x]<0.381) "9" else if(pg$distAbs[x]<0.423) "10" else "more")
#write a column that only shows the tolerated deviations
pg$dist0f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0") pg$dist[x] else NA)
pg$dist1f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1") pg$dist[x] else NA)
pg$dist2f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2") pg$dist[x] else NA)
pg$dist3f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3") pg$dist[x] else NA)
pg$dist4f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4") pg$dist[x] else NA)
pg$dist5f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5") pg$dist[x] else NA)
pg$dist6f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6") pg$dist[x] else NA)
pg$dist7f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7") pg$dist[x] else NA)
pg$dist8f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7"|pg$distCat[x]=="8") pg$dist[x] else NA)
pg$dist9f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7"|pg$distCat[x]=="8"|pg$distCat[x]=="9") pg$dist[x] else NA)
pg$dist10f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7"|pg$distCat[x]=="8"|pg$distCat[x]=="9"|pg$distCat[x]=="10") pg$dist[x] else NA)
#calculate the standard deviation, ignore NAs
sd(pg$dist0f[1:JHn], na.rm=TRUE)
sd(pg$dist1f[1:JHn], na.rm=TRUE)
sd(pg$dist2f[1:JHn], na.rm=TRUE)
sd(pg$dist3f[1:JHn], na.rm=TRUE)
sd(pg$dist4f[1:JHn], na.rm=TRUE)
sd(pg$dist5f[1:JHn], na.rm=TRUE)
sd(pg$dist6f[1:JHn], na.rm=TRUE)
sd(pg$dist7f[1:JHn], na.rm=TRUE)
sd(pg$dist8f[1:JHn], na.rm=TRUE)
sd(pg$dist9f[1:JHn], na.rm=TRUE)
sd(pg$dist10f[1:JHn], na.rm=TRUE)
#show how many beats are in which confInt
table (pg$distCat[1:JHn])
# Now, resolve conflicts:
#  1.
#a.	When nearBeat contains two values (“[2:3]”) AND
#b.	(looking into Elan) they are both either occupied or unoccupied by another neighbour (ELSE write the number of the unoccupied candidate into the nearBeat cell )
#replace the nearBeat value with a distant number (e.g. if it is 1, put 11; if it is 33, put 1).
#  2.
#a.	When nearBeat is equal for more than one row AND
#b.	more than one of these rows are tolerated AND
#c.	two are equally the closest (else replace the farther) AND
#d.	they are both either occupied or unoccupied by another neighbour (ELSE replace only occupied),
#replace the nearBeat value of all except the closest neighbour by a distant number (e.g. if it is 1, put 11; if it is 33, put 1).
#Then rerun the commands beginning exactly with “#write to columns beatsOther …”
View(pg)
pg <- subset(pg, beats>=0 & beats<15)
View(pg)
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Eng_rh-s.txt", header=FALSE)
View(pg)
?for()
?for
pg <- subset(pg, beats>=0    & beats<15  |
beats>=60   & beats<75  |
beats>=120  & beats<135 |
beats>=180  & beats<195 |
beats>=240  & beats<255 |
beats>=300  & beats<315 |
beats>=360  & beats<375 |
beats>=420  & beats<435 |
beats>=480  & beats<495
)
pg <- subset(pg, beats>=0    & beats<15  |
beats>=60   & beats<75  |
beats>=120  & beats<135 |
beats>=180  & beats<195 |
beats>=240  & beats<255 |
beats>=300  & beats<315 |
beats>=360  & beats<375 |
beats>=420  & beats<435 |
beats>=480  & beats<495
)
View(pg)
x <- subset(pg,  beats>=0    & beats<15  |
beats>=60   & beats<75  |
beats>=120  & beats<135 |
beats>=180  & beats<195 |
beats>=240  & beats<255 |
beats>=300  & beats<315 |
beats>=360  & beats<375 |
beats>=420  & beats<435 |
beats>=480  & beats<495
)
x <- pg [which(  pg$beats>=0    & pg$beats<15  |
pg$beats>=60   & pg$beats<75  |
pg$beats>=120  & pg$beats<135 |
pg$beats>=180  & pg$beats<195 |
pg$beats>=240  & pg$beats<255 |
pg$beats>=300  & pg$beats<315 |
pg$beats>=360  & pg$beats<375 |
pg$beats>=420  & pg$beats<435 |
pg$beats>=480  & pg$beats<495
)
]
View(x)
#create new columns for JH and NS
pg$V5 <- NA; pg$V6 <- NA; pg$V7 <- NA; pg$V8 <- NA; pg$V9 <- NA; pg$V10 <- NA; pg$V11 <- NA; pg$V12 <- NA; pg$V13 <- NA; pg$V14 <- NA; pg$V15 <- NA; pg$V16 <- NA; pg$V17 <- NA; pg$V18 <- NA; pg$V19 <- NA; pg$V20 <- NA
#write column names for JH and NS
colnames(pg) <- c("coder","NA","beats","hand","nearBeat","beatsOther", "dist", "distAbs", "distCat", "dist0f", "dist1f", "dist2f", "dist3f", "dist4f", "dist5f", "dist6f", "dist7f", "dist8f", "dist9f", "dist10f")
#set one vector to of each raters’ number observations
JHn <- length (grep('JH', pg$coder))
NSn <- length (grep('NS', pg$coder))
#write to columns “nearBeat” the value of the row number of the other rater value (“beat”) that is closest to the value of the jh rater of each row
pg$nearBeat <- sapply (1:(NSn+JHn), function(x) which(abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x])==min(abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x]))))
#write to columns beatsOther the value of the other rater that is closest to the value of this rater of each row
pg$beatsOther <- pg$beats[JHn + sapply (1:(JHn+NSn), function(x) which (pg$nearBeat[(JHn+1):(JHn+NSn)]==pg$nearBeat[x]))]
#compute difference between beats and beatsOhter
pg$dist <- pg$beats - pg$beatsOther
#compute absolute difference between beats and beatsOhter
pg$distAbs <- abs(pg$beats - pg$beatsOther)
#show whether it is perfect (0), within one to four frames tolerance (0/1/2/3/4/5/6/7/8/9/10/more)
pg$distCat <- sapply (1:(JHn+NSn), function(x) if(pg$distAbs[x]<0.003) "0" else if(pg$distAbs[x]<0.045) "1" else if(pg$distAbs[x]<0.087) "2" else if(pg$distAbs[x]<0.129) "3" else if(pg$distAbs[x]<0.171) "4" else if(pg$distAbs[x]<0.213) "5" else if(pg$distAbs[x]<0.255) "6" else if(pg$distAbs[x]<0.297) "7" else if(pg$distAbs[x]<0.339) "8" else if(pg$distAbs[x]<0.381) "9" else if(pg$distAbs[x]<0.423) "10" else "more")
#write a column that only shows the tolerated deviations
pg$dist0f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0") pg$dist[x] else NA)
pg$dist1f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1") pg$dist[x] else NA)
pg$dist2f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2") pg$dist[x] else NA)
pg$dist3f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3") pg$dist[x] else NA)
pg$dist4f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4") pg$dist[x] else NA)
pg$dist5f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5") pg$dist[x] else NA)
pg$dist6f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6") pg$dist[x] else NA)
pg$dist7f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7") pg$dist[x] else NA)
pg$dist8f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7"|pg$distCat[x]=="8") pg$dist[x] else NA)
pg$dist9f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7"|pg$distCat[x]=="8"|pg$distCat[x]=="9") pg$dist[x] else NA)
pg$dist10f <- sapply (1:(JHn+NSn), function(x) if(pg$distCat[x]=="0"|pg$distCat[x]=="1"|pg$distCat[x]=="2"|pg$distCat[x]=="3"|pg$distCat[x]=="4"|pg$distCat[x]=="5"|pg$distCat[x]=="6"|pg$distCat[x]=="7"|pg$distCat[x]=="8"|pg$distCat[x]=="9"|pg$distCat[x]=="10") pg$dist[x] else NA)
#calculate the standard deviation, ignore NAs
sd(pg$dist0f[1:JHn], na.rm=TRUE)
sd(pg$dist1f[1:JHn], na.rm=TRUE)
sd(pg$dist2f[1:JHn], na.rm=TRUE)
sd(pg$dist3f[1:JHn], na.rm=TRUE)
sd(pg$dist4f[1:JHn], na.rm=TRUE)
sd(pg$dist5f[1:JHn], na.rm=TRUE)
sd(pg$dist6f[1:JHn], na.rm=TRUE)
sd(pg$dist7f[1:JHn], na.rm=TRUE)
sd(pg$dist8f[1:JHn], na.rm=TRUE)
sd(pg$dist9f[1:JHn], na.rm=TRUE)
sd(pg$dist10f[1:JHn], na.rm=TRUE)
#show how many beats are in which confInt
table (pg$distCat[1:JHn])
x <- pg [which(  pg$beats>=0    & pg$beats<15  |
pg$beats>=60   & pg$beats<75  |
pg$beats>=120  & pg$beats<135 |
pg$beats>=180  & pg$beats<195 |
pg$beats>=240  & pg$beats<255 |
pg$beats>=300  & pg$beats<315 |
pg$beats>=360  & pg$beats<375 |
pg$beats>=420  & pg$beats<435 |
pg$beats>=480  & pg$beats<495
)
]
View(pg)
x <- pg[which(   pg$beats>=0    & pg$beats<15  |
pg$beats>=60   & pg$beats<75  |
pg$beats>=120  & pg$beats<135 |
pg$beats>=180  & pg$beats<195 |
pg$beats>=240  & pg$beats<255 |
pg$beats>=300  & pg$beats<315 |
pg$beats>=360  & pg$beats<375 |
pg$beats>=420  & pg$beats<435 |
pg$beats>=480  & pg$beats<495
)
]
source.with.encoding('D:/Dokumente/stats/R/pg/1.R', encoding='UTF-8')
x <- pg[which(pg$beats>=120  & pg$beats<135)]
x <- pg[which(pg$beats>=120  & pg$beats<135) || pg$beats>=180  & pg$beats<195]
View(x)
x <- pg[which(pg$beats>=120  & pg$beats<135) | pg$beats>=180  & pg$beats<195]
x <- pg[which(pg$beats>=120  & pg$beats<135 | pg$beats>=180  & pg$beats<195])]
x <- pg[which(pg$beats==120:135 | 180:195)]
x <- pg[which(pg$beats>=120  & pg$beats<135)]
x <- pg[which(pg$beats>=120  & pg$beats<135, pg$beats>=180  & pg$beats<195])]
x <- pg[which(pg$beats>=120  & pg$beats<135 || pg$beats>=180  & pg$beats<195])]
x <- pg[which(pg$beats>=120  & pg$beats<135 || pg$beats>=180  & pg$beats<195])
x <- pg[which(pg$beats>=120  & pg$beats<135 || pg$beats>=180  & pg$beats<195)]
x <- pg[which(pg$beats>=180  & pg$beats<195)]
x <- pg[which(pg$beats>=180  & pg$beats<195)]
x <- pg[which(pg$beats>=120  & pg$beats<135)]
View(x)
x <- pg[pg$beats>=120  & pg$beats<135]
View(x)
View(pg)
x <- pg[which(pg$beats>=120  & pg$beats<135 || pg$beats>=180  & pg$beats<195),]
x <- pg[which(pg$beats>=120  & pg$beats<135 | pg$beats>=180  & pg$beats<195),]
View(x)
View(x)
View(x)
source.with.encoding('D:/Dokumente/stats/R/pg/1.R', encoding='UTF-8')
x <- pg[,which(pg$beats>=120  & pg$beats<135 | pg$beats>=180  & pg$beats<195)]
x <- pg[which(pg$beats>=180)]
x <- pg[which(pg$beats>=180),]
View(x)
View(x)
pg[which(pg$beats>=180),]
x <- pg[which(pg$beats>=180),]
View(x)
View(x)
View(x)
source.with.encoding('D:/Dokumente/stats/R/pg/1.R', encoding='UTF-8')
x <- pg[function(x) {
which(pg$beats>=180 & pg$beats>=195),]
}
x <- pg[function(x) {
which(pg$beats>=180 & pg$beats>=195)
},]
x <- pg[
function(y) {
which(pg$beats>=180 & pg$beats>=195)
},
]
which(abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x])==min(abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x]))))
x <- pg[
function() {
which(pg$beats>=180 & pg$beats>=195)
},
]
source.with.encoding('D:/Dokumente/stats/R/pg/1.R', encoding='UTF-8')
sapply (1:(NSn+JHn), function(x) {
which(
abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x])==min(
abs(pg$beats[(JHn+1):(NSn+JHn)]-pg$beats[x]))
)
})
x <- pg[which(pg$beats>==180),] #cannot open dataframe!
x <- pg[which(pg$beats>=180),] #cannot open dataframe!
View(x)
x <- pg[which(pg$beats>=120  & pg$beats<135,)]   #doesn't work
for (i in 10) i*60
for (i in 10) i*60
for (i in 10) i*60
x <- for (i in 10) i*60
for(i in 1:5) print(1:i)
x <- for (i in 0:10) i*60
x <- for (i in 0:10) c(i*60)
x <- c( for (i in 0:10) i*60)
x <- function(x) c( for (i in 0:10) i*60)
x <- 1:10
y <- x+60
y <- x*60
z <- x*60+15
pg[which(pg$beats>=x  & pg$beats<y,)]
which(pg$beats>=x  & pg$beats<y,)
which(pg$beats>=x  && pg$beats<y,)
x <- pg[which(pg$beats>180),]
View(x)
x <- pg[which(pg$beats>=180 & pg$beats>=195),]
summary(x$beats)
str(x$beats)
x$beats
x <- pg[which(pg$beats>=180 & pg$beats<=195),]
x$beats
x <- pg[which(pg$beats>=120 & pg$beats<=135) | pg$beats>=180 & pg$beats<=195), ]
x <- pg[which(pg$beats>=120 & pg$beats<=135 | pg$beats>=180 & pg$beats<=195), ]
x$beats
x
x <- pg[
which(
pg$beats>=0    & pg$beats<15  |
pg$beats>=60   & pg$beats<75  |
pg$beats>=120  & pg$beats<135 |
pg$beats>=180  & pg$beats<195 |
pg$beats>=240  & pg$beats<255 |
pg$beats>=300  & pg$beats<315 |
pg$beats>=360  & pg$beats<375 |
pg$beats>=420  & pg$beats<435 |
pg$beats>=480  & pg$beats<495
)
]
x$beats
View(x)
x <- pg[
which(
pg$beats>=0    & pg$beats<15  |
pg$beats>=60   & pg$beats<75  |
pg$beats>=120  & pg$beats<135 |
pg$beats>=180  & pg$beats<195 |
pg$beats>=240  & pg$beats<255 |
pg$beats>=300  & pg$beats<315 |
pg$beats>=360  & pg$beats<375 |
pg$beats>=420  & pg$beats<435 |
pg$beats>=480  & pg$beats<495
),
]
View(x)
x$beats
pg[which(pg$beats>=x  & pg$beats<y), ]
x <- pg[which(pg$beats>=x  & pg$beats<y), ]
x <- pg[
which(
any(
pg$beats>=x  & pg$beats<y
)
),
]
x <- pg[
any(
which(
pg$beats>=x  & pg$beats<y
)
),
]
x <- pg[
which(
pg$beats>=0    & pg$beats<15  |
pg$beats>=60   & pg$beats<75  |
pg$beats>=120  & pg$beats<135 |
pg$beats>=180  & pg$beats<195 |
pg$beats>=240  & pg$beats<255 |
pg$beats>=300  & pg$beats<315 |
pg$beats>=360  & pg$beats<375 |
pg$beats>=420  & pg$beats<435 |
pg$beats>=480  & pg$beats<495 |
pg$beats>=540  & pg$beats<555 |
pg$beats>=600  & pg$beats<615 |
pg$beats>=660  & pg$beats<675 |
pg$beats>=720  & pg$beats<735 |
pg$beats>=780  & pg$beats<795 |
pg$beats>=840  & pg$beats<855 |
pg$beats>=900  & pg$beats<915 |
pg$beats>=960  & pg$beats<975 |
pg$beats>=1020 & pg$beats<1035|
pg$beats>=1080 & pg$beats<1095|
pg$beats>=1140 & pg$beats<1155|
pg$beats>=1200 & pg$beats<1215
),
]
beats$x
x$beats
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Eng_rh-s.txt", header=FALSE)
View(pg)
source.with.encoding('D:/Dokumente/stats/R/pg/1.R', encoding='UTF-8')
1.R
source.with.encoding('D:/Dokumente/stats/R/pg/1dataPrep.R', encoding='UTF-8')
source.with.encoding('D:/Dokumente/stats/R/pg/2renunnable.R', encoding='UTF-8')
source('D:/Dokumente/stats/R/pg/1st15sec.R')
source('D:/Dokumente/stats/R/pg/3contTables.R')
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Iw_lh-p.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
View(pg)
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Eng_lh-s.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
View(pg)
twoRerunnable()
View(pg)
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Iw_lh-s.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
threeContTables
threeContTables()
threeContTables(secCoded=60)
secCoded <- 68
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/RN_Eng_rh-s.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
threeContTables()
source('D:/Dokumente/stats/R/pg/3contTables.R')
threeContTables()
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/RN_Eng_lh-s.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
threeContTables()
secCoded <- 60
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/RN_Iw_rh-p.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/RN_Iw_rh-p.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
threeContTables()
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/RN_Iw_rh-s.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
threeContTables()
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Iw_rh.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
threeContTables()
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Iw_lh.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Iw_lh.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
threeContTables()
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/DY_Iw_rh.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
threeContTables()
pg <- read.delim("D:/Dokumente/stats/ProsodyAndGestures_stats/RN_Iw_rh.txt", header=FALSE)
View(pg)
oneDataPrep()
first15sec()
twoRerunnable()
View(pg)
threeContTables()
source.with.encoding('D:/Dokumente/stats/R/pg/1dataPrep.R', encoding='UTF-8')
source.with.encoding('D:/Dokumente/stats/R/pg/2renunnable.R', encoding='UTF-8')
source('D:/Dokumente/stats/R/pg/3contTables.R')
oneDataPrep
View(pg)
twoRerunnable()
threeContTables
threeContTables()
View(pg)
source('D:/Dokumente/stats/R/pg/3contTables.R')
threeContTables(tolerance=1)
source('D:/Dokumente/stats/R/pg/3contTables.R')
threeContTables()
threeContTables(tolerance=1)
threeContTables(tolerance=1)
source('D:/Dokumente/stats/R/pg/3contTables.R')
threeContTables(tolerance=1)
source('D:/Dokumente/stats/R/pg/3contTables.R')
